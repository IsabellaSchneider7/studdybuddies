{"version":3,"sources":["Lobby.js","Participant.js","CountDownTimer.js","PlaySound.js","Room.js","VideoChat.js","App.js","serviceWorker.js","index.js"],"names":["Lobby","username","handleUsernameChange","roomName","handleRoomNameChange","handleSubmit","connecting","onSubmit","htmlFor","type","id","value","onChange","readOnly","required","disabled","Participant","participant","useState","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","useRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","useEffect","on","kind","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","className","identity","ref","autoPlay","muted","counter","CountDownTimer","hoursMinSecs","hours","minutes","seconds","React","hrs","mins","secs","setTime","pageColour","setPageColour","pomoText","setPomoText","reset","parseInt","timerId","setInterval","console","log","clearInterval","style","backgroundColor","toString","padStart","PlaySound","useSound","play","play2","play3","play4","play5","onClick","alert","Room","room","handleLogout","participants","setParticipants","participantConnected","prevParticipants","participantDisconnected","p","forEach","off","remoteParticipants","sid","localParticipant","VideoChat","setUsername","setRoomName","setRoom","setConnecting","useCallback","event","target","preventDefault","fetch","method","body","JSON","stringify","headers","then","res","json","data","Video","connect","token","name","catch","err","error","prevRoom","tracks","trackPub","stop","disconnect","render","tidyUp","persisted","window","addEventListener","removeEventListener","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","SignIn","provider","GoogleAuthProvider","signInWithPopup","App","useAuthState","user","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06b4660e.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Lobby = ({\n  username,\n  handleUsernameChange,\n  roomName,\n  handleRoomNameChange,\n  handleSubmit,\n  connecting,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Enter a room</h2>\n      <div>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"field\"\n          value={username}\n          onChange={handleUsernameChange}\n          readOnly={connecting}\n          required\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"room\">Room name:</label>\n        <input\n          type=\"text\"\n          id=\"room\"\n          value={roomName}\n          onChange={handleRoomNameChange}\n          readOnly={connecting}\n          required\n        />\n      </div>\n\n      <button type=\"submit\" disabled={connecting}>\n        {connecting ? \"Connecting\" : \"Join\"}\n      </button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <button> SignOut</button>\n      <h1> </h1>\n    </form>\n  );\n};\n\nexport default Lobby;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true} />\n      <audio ref={audioRef} autoPlay={true} muted={true} />\n    </div>\n  );\n};\n\nexport default Participant;\n","import React from \"react\";\nimport \"./App.css\";\n//import PlaySound from \"./PlaySound\";\n\nvar counter = 1;\nconst CountDownTimer = ({ hoursMinSecs }) => {\n  const { hours = 0, minutes = 0, seconds = 60 } = hoursMinSecs;\n  const [[hrs, mins, secs], setTime] = React.useState([\n    hours,\n    minutes,\n    seconds,\n  ]);\n  const [pageColour, setPageColour] = React.useState(\"#CA5130\");\n  const [pomoText, setPomoText] = React.useState(\"STUDY TIME\");\n\n  const tick = () => {\n    if (hrs === 0 && mins === 0 && secs === 0) {\n      //get rid of reset so that it changes to a diff length\n      counter++;\n      console.log(\"count\", counter);\n\n      reset();\n    } else if (mins === 0 && secs === 0) {\n      setTime([hrs - 1, 59, 59]);\n    } else if (secs === 0) {\n      setTime([hrs, mins - 1, 59]);\n    } else {\n      setTime([hrs, mins, secs - 1]);\n    }\n  };\n\n  const studyHours = \"0\";\n  const studyMinutes = \"0\";\n  const studySeconds = \"5\";\n  const breakHours = \"0\";\n  const breakMinutes = \"0\";\n  const breakSeconds = \"20\";\n\n  const reset = () => {\n    if (counter % 2 === 1) {\n      //on even counter vals take study\n      setTime([\n        parseInt(studyHours),\n        parseInt(studyMinutes),\n        parseInt(studySeconds),\n      ]);\n      setPageColour(\"#CA5130\");\n      setPomoText(\"STUDY TIME\");\n    } else {\n      //on odd counter vals break\n      setTime([\n        parseInt(breakHours),\n        parseInt(breakMinutes),\n        parseInt(breakSeconds),\n      ]);\n      setPageColour(\"#27ca6e\");\n      setPomoText(\"BREAK TIME\");\n    }\n  };\n\n  React.useEffect(() => {\n    const timerId = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerId);\n  });\n\n  return (\n    <div style={{ backgroundColor: pageColour }}>\n      <h1>{pomoText}</h1>\n      <p>{`${hrs.toString().padStart(2, \"0\")}:${mins\n        .toString()\n        .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`}</p>\n    </div>\n  );\n};\n\nexport default CountDownTimer;\n","import React from \"react\";\nimport useSound from \"use-sound\";\n\nfunction PlaySound() {\n  const soundUrl = \"/drumSound1.wav\";\n  const soundUrl2 = \"/saxSound.wav\";\n  const soundUrl3 = \"/trumpetSound.wav\";\n  const soundUrl4 = \"/guitarSound.wav\";\n  const soundUrl5 = \"/alert.mp3\";\n\n  const [play] = useSound(soundUrl);\n  const [play2] = useSound(soundUrl2);\n  const [play3] = useSound(soundUrl3);\n  const [play4] = useSound(soundUrl4);\n  const [play5] = useSound(soundUrl5);\n\n  function playSound1() {\n    play4();\n  }\n\n  function playSound2() {\n    play();\n  }\n\n  function playSound3() {\n    play2();\n  }\n\n  function playSound4() {\n    play3();\n  }\n\n  function playSound5() {\n    play5();\n    alert(\"Get back to work!\");\n  }\n\n  return (\n    <div className=\"flex\">\n      <div className=\"flex playButton\">\n        <button onClick={playSound1}>1</button>\n      </div>\n      <div className=\"flex playButton\">\n        <button onClick={playSound2}>2</button>\n      </div>\n      <div className=\"flex playButton\">\n        <button onClick={playSound3}>3</button>\n      </div>\n      <div className=\"flex playButton\">\n        <button onClick={playSound4}>4</button>\n      </div>\n      <div>\n        <button onClick={playSound5}>Flag someone</button>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaySound;\n","import React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport CountDownTimer from \"./CountDownTimer\";\nimport PlaySound from \"./PlaySound\";\n\nconst Room = ({ roomName, room, handleLogout }) => {\n  const [participants, setParticipants] = useState([]);\n  const hoursMinSecs = { hours: 0, minutes: 0, seconds: 5 };\n\n  useEffect(() => {\n    const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = (participant) => {\n      setParticipants((prevParticipants) =>\n        prevParticipants.filter((p) => p !== participant)\n      );\n    };\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n\n  const remoteParticipants = participants.map((participant) => (\n    <Participant key={participant.sid} participant={participant} />\n  ));\n\n  return (\n    <div className=\"room\">\n      <header>\n        <CountDownTimer hoursMinSecs={hoursMinSecs} />\n      </header>\n      <h2>Room: {roomName}</h2>\n      <div className=\"logoutButton\">\n        <button onClick={handleLogout}>Log out</button>\n      </div>\n      <PlaySound />\n      <div className=\"local-participant\">\n        {room ? (\n          <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n      <h3>Remote Participants</h3>\n      <div className=\"remote-participants\">{remoteParticipants}</div>\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n  }, []);\n\n  const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      setConnecting(true);\n      const data = await fetch(\"/video/token\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          identity: username,\n          room: roomName,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => res.json());\n      Video.connect(data.token, {\n        name: roomName,\n      })\n        .then((room) => {\n          setConnecting(false);\n          setRoom(room);\n        })\n        .catch((err) => {\n          console.error(err);\n          setConnecting(false);\n        });\n    },\n    [roomName, username]\n  );\n\n  const handleLogout = useCallback(() => {\n    setRoom((prevRoom) => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n      return null;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (room) {\n      const tidyUp = (event) => {\n        if (event.persisted) {\n          return;\n        }\n        if (room) {\n          handleLogout();\n        }\n      };\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return () => {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n\n  let render;\n  if (room) {\n    render = (\n      <div>\n        <Room roomName={roomName} room={room} handleLogout={handleLogout} />\n      </div>\n    );\n  } else {\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n        connecting={connecting}\n      />\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n","import React from \"react\";\nimport VideoChat from \"./VideoChat\";\nimport \"./App.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n//import { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAhQPXLX-dGfBbu6LwK1NqWX7dDGovnP1g\",\n  authDomain: \"studybuddies-bdf0b.firebaseapp.com\",\n  projectId: \"studybuddies-bdf0b\",\n  storageBucket: \"studybuddies-bdf0b.appspot.com\",\n  messagingSenderId: \"819278302220\",\n  appId: \"1:819278302220:web:be3a6f8be430961cf2b229\",\n  measurementId: \"G-GR6M89H55F\",\n});\n\nconst auth = firebase.auth();\n//const firestore = firebase.firestore();\n\nconst App = () => {\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>StuddyBuddies</h1>\n      </header>\n\n      <section>{user ? <VideoChat /> : <SignIn />}</section>\n      <footer>\n        <p>Made by Ria, Chris, Nick and Isabella</p>\n      </footer>\n    </div>\n  );\n};\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n  return <button onClick={signInWithGoogle}>Sign in with Google</button>;\n}\n\n// function SignOut() {\n//   return (\n//     auth.currentUser && <button onClick={() => auth.signOut()}> SignOut</button>\n//   );\n// }\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}