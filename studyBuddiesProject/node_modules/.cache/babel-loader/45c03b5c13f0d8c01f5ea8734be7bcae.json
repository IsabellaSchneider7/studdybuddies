{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/Users/Chris/Desktop/hackathon/studdybuddies/studyBuddiesProject/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Chris\\\\Desktop\\\\hackathon\\\\studdybuddies\\\\studyBuddiesProject\\\\src\\\\Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\n\nconst Room = ({\n  roomName,\n  room,\n  handleLogout\n}) => {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        participants = _useState2[0],\n        setParticipants = _useState2[1];\n\n  useEffect(() => {\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    };\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n  const remoteParticipants = participants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n    participant: participant\n  }, participant.sid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Log out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-participant\",\n      children: room ? /*#__PURE__*/_jsxDEV(Participant, {\n        participant: room.localParticipant\n      }, room.localParticipant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Remote Participants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remote-participants\",\n      children: remoteParticipants\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Room, \"nHYwA4EcJLbZLF+vxFzWucL1xak=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Users/Chris/Desktop/hackathon/studdybuddies/studyBuddiesProject/src/Room.js"],"names":["React","useEffect","useState","Participant","Room","roomName","room","handleLogout","participants","setParticipants","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","off","remoteParticipants","map","sid","localParticipant"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA;AAAlB,CAAD,KAAsC;AAAA;;AAAA,oBACTL,QAAQ,CAAC,EAAD,CADC;AAAA;AAAA,QAC1CM,YAD0C;AAAA,QAC5BC,eAD4B;;AAGjDR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,oBAAoB,GAAIC,WAAD,IAAiB;AAC5CF,MAAAA,eAAe,CAAEG,gBAAD,IAAsB,CAAC,GAAGA,gBAAJ,EAAsBD,WAAtB,CAAvB,CAAf;AACD,KAFD;;AAIA,UAAME,uBAAuB,GAAIF,WAAD,IAAiB;AAC/CF,MAAAA,eAAe,CAAEG,gBAAD,IACdA,gBAAgB,CAACE,MAAjB,CAAyBC,CAAD,IAAOA,CAAC,KAAKJ,WAArC,CADa,CAAf;AAGD,KAJD;;AAMAL,IAAAA,IAAI,CAACU,EAAL,CAAQ,sBAAR,EAAgCN,oBAAhC;AACAJ,IAAAA,IAAI,CAACU,EAAL,CAAQ,yBAAR,EAAmCH,uBAAnC;AACAP,IAAAA,IAAI,CAACE,YAAL,CAAkBS,OAAlB,CAA0BP,oBAA1B;AACA,WAAO,MAAM;AACXJ,MAAAA,IAAI,CAACY,GAAL,CAAS,sBAAT,EAAiCR,oBAAjC;AACAJ,MAAAA,IAAI,CAACY,GAAL,CAAS,yBAAT,EAAoCL,uBAApC;AACD,KAHD;AAID,GAlBQ,EAkBN,CAACP,IAAD,CAlBM,CAAT;AAoBA,QAAMa,kBAAkB,GAAGX,YAAY,CAACY,GAAb,CAAkBT,WAAD,iBAC1C,QAAC,WAAD;AAAmC,IAAA,WAAW,EAAEA;AAAhD,KAAkBA,WAAW,CAACU,GAA9B;AAAA;AAAA;AAAA;AAAA,UADyB,CAA3B;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAA,2BAAWhB,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBACGD,IAAI,gBACH,QAAC,WAAD;AAEE,QAAA,WAAW,EAAEA,IAAI,CAACgB;AAFpB,SACOhB,IAAI,CAACgB,gBAAL,CAAsBD,GAD7B;AAAA;AAAA;AAAA;AAAA,cADG,GAMH;AAPJ;AAAA;AAAA;AAAA;AAAA,YAHF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAcE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA7CD;;GAAMf,I;;KAAAA,I;AA+CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Participant from \"./Participant\";\r\n\r\nconst Room = ({ roomName, room, handleLogout }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const participantConnected = (participant) => {\r\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\r\n    };\r\n\r\n    const participantDisconnected = (participant) => {\r\n      setParticipants((prevParticipants) =>\r\n        prevParticipants.filter((p) => p !== participant)\r\n      );\r\n    };\r\n\r\n    room.on(\"participantConnected\", participantConnected);\r\n    room.on(\"participantDisconnected\", participantDisconnected);\r\n    room.participants.forEach(participantConnected);\r\n    return () => {\r\n      room.off(\"participantConnected\", participantConnected);\r\n      room.off(\"participantDisconnected\", participantDisconnected);\r\n    };\r\n  }, [room]);\r\n\r\n  const remoteParticipants = participants.map((participant) => (\r\n    <Participant key={participant.sid} participant={participant} />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"room\">\r\n      <h2>Room: {roomName}</h2>\r\n      <button onClick={handleLogout}>Log out</button>\r\n      <div className=\"local-participant\">\r\n        {room ? (\r\n          <Participant\r\n            key={room.localParticipant.sid}\r\n            participant={room.localParticipant}\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      <h3>Remote Participants</h3>\r\n      <div className=\"remote-participants\">{remoteParticipants}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}